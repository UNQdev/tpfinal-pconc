package main;

import java.util.ArrayList;
import java.util.List;

public class IntegerList {
	
	List<Integer> list;
	int threadsDisponibles;
	
	public synchronized int size() {}
	public synchronized boolean isEmpty() {}
	public synchronized boolean contains(Integer element) {}
	public synchronized ArrayList<Integer> add(Integer element) {}
	public synchronized Integer get(int element_index) {}
	public synchronized ArrayList<Integer> set(Integer element, int element_index) {}

	public ArrayList<Integer> sort(ArrayList<Integer> list, int threadsDisponibles) {
		ArrayList<Integer> result = new ArrayList<Integer>();
		Integer pivot;
		if (list.size() <= 1) return list;
		
		Integer pivot = this.getPivot();
		
		
		
		
		
		return result;
	}
	
	
	public Integer getPivot() {
		Integer pivot = this.list.get(this.list.size()/2);
		return pivot;
	}	
	public ArrayList<Integer> lessThan(Integer pivot, ArrayList<Integer> list) {
		ArrayList<Integer> result = new ArrayList<Integer>();
		for (Integer element : list) {
			if (element < pivot) {
				result.add(element);
			}
		}
		return result;
	}	
	public ArrayList<Integer> greaterThan(Integer pivot, ArrayList<Integer> list) {
		ArrayList<Integer> result = new ArrayList<Integer>();
		for (Integer elemento : list) {
			if (elemento >= pivot) {
				result.add(elemento);
			}
		}
		return result;
	}
}
